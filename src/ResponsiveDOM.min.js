let ResponsiveDOM={mediaQueryListeners:[],components:[],onMediaQueryChange(e,t){if(!Array.isArray(e)||!Array.isArray(t))throw Error("Queries and funcs should be arrays.");e.forEach((e,n)=>{let i=t[n];if("string"!=typeof e||"function"!=typeof i)throw Error("Invalid query or callback function.");let r=window.matchMedia(e),o=e=>{e.matches&&i()};r.addListener(o),this.mediaQueryListeners.push({mediaQueryList:r,callback:o})})},removeMediaQueryListeners(){this.mediaQueryListeners.forEach(({mediaQueryList:e,callback:t})=>{e.removeListener(t)}),this.mediaQueryListeners=[]},isMobile(){let e=window.matchMedia("(max-width: 767px)");return e.matches},isTablet(){let e=window.matchMedia("(min-width: 768px) and (max-width: 1023px)");return e.matches},isDesktop(){let e=window.matchMedia("(min-width: 1024px)");return e.matches},isTV(){let e=window.matchMedia("(min-width: 1366px)");return e.matches},createComponent(e,t){let n=document.querySelector(e);if(!n)return console.error(`Element with selector '${e}' not found.`),null;let i=Object.assign({},{breakpoints:{mobile:null,tablet:null,desktop:null},onResize:null,onInit:null,onDestroy:null},t),r={element:n,options:i,currentBreakpoint:null},o=()=>{let e=ResponsiveDOM.determineBreakpoint(r);e!==r.currentBreakpoint&&(r.currentBreakpoint=e,r.options.breakpoints[e]&&r.options.breakpoints[e](r))},s=()=>{r.options.onResize&&r.options.onResize(r),o()},a=()=>{r.options.onInit&&r.options.onInit(r),o(),window.addEventListener("resize",s)},l=()=>{r.options.onDestroy&&r.options.onDestroy(r),window.removeEventListener("resize",s)};return r.destroy=l,r.init=a,a(),this.components.push(r),r},determineBreakpoint(e){e.options.breakpoints;let t="mobile",n=window.innerWidth;return n>=768&&n<1024?t="tablet":n>=1024?t="desktop":n>=1366&&(t="tv"),t}};export default ResponsiveDOM;